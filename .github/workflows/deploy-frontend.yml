name: Deploy Angular to Azure App Service

on:
  push:
    branches: [ main ]
    paths: [ 'inbentory_app/stock-app/**' ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        cd inbentory_app/stock-app
        npm install
        
    - name: Build Angular app
      run: |
        cd inbentory_app/stock-app
        npm run build:spa
        
    - name: Create server.js for Azure deployment
      run: |
        cd inbentory_app/stock-app
        cat > dist/stock-app/server.js << 'EOF'
        const express = require('express');
        const path = require('path');
        const fs = require('fs');
        const app = express();

        // ログ出力
        console.log('Starting server...');
        console.log('Current directory:', __dirname);
        console.log('Static files path:', path.join(__dirname, 'browser'));

        // browserディレクトリの存在確認
        const browserDir = path.join(__dirname, 'browser');
        const indexFile = path.join(browserDir, 'index.html');

        if (!fs.existsSync(browserDir)) {
          console.error('Browser directory not found:', browserDir);
          process.exit(1);
        }

        if (!fs.existsSync(indexFile)) {
          console.error('index.html not found:', indexFile);
          process.exit(1);
        }

        console.log('Browser directory found:', browserDir);
        console.log('index.html found:', indexFile);

        // 静的ファイルの配信
        app.use(express.static(browserDir));

        // ヘルスチェック
        app.get('/health', (req, res) => {
          res.json({ status: 'OK', timestamp: new Date().toISOString() });
        });

        // SPA用のフォールバック - すべてのルートをindex.htmlにリダイレクト
        app.get('*', (req, res) => {
          console.log('Serving:', req.url);
          res.sendFile(indexFile);
        });

        // エラーハンドリング
        app.use((err, req, res, next) => {
          console.error('Error:', err);
          res.status(500).send('Something broke!');
        });

        const port = process.env.PORT || 8080;
        app.listen(port, () => {
          console.log(`Server successfully running on port ${port}`);
          console.log(`Visit: http://localhost:${port}`);
        });
        EOF
        
    - name: Create production package.json
      run: |
        cd inbentory_app/stock-app
        cat > dist/stock-app/package.json << 'EOF'
        {
          "name": "stock-app",
          "version": "0.0.0",
          "scripts": {
            "start": "node server.js"
          },
          "dependencies": {
            "express": "^5.1.0"
          }
        }
        EOF
        
    - name: Install production dependencies
      run: |
        cd inbentory_app/stock-app/dist/stock-app
        npm install --production
        
    - name: Copy web.config if exists
      run: |
        cd inbentory_app/stock-app
        if [ -f src/web.config ]; then cp src/web.config dist/stock-app/browser/; fi
        
    - name: List build output
      run: |
        cd inbentory_app/stock-app
        echo "=== Build output directory structure ==="
        find dist -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -10
        echo "=== Browser directory contents ==="
        ls -la dist/stock-app/browser/
        echo "=== Index.html content preview ==="
        head -20 dist/stock-app/browser/index.html
        
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'inventory-web-yumi-dev'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_WEB }}
        package: './inbentory_app/stock-app/dist/stock-app'
